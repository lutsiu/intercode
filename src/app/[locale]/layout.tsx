import type {Metadata} from "next";
import {NextIntlClientProvider, hasLocale} from "next-intl";
import {setRequestLocale} from "next-intl/server";
import {notFound} from "next/navigation";
import {routing} from "@/i18n/routing";

import {Geist, Geist_Mono} from "next/font/google";
import {Montserrat} from "next/font/google";
import "@/app/globals.css";

import Header from "@/app/components/Common/Header/Header";
import Footer from "@/app/components/Common/Footer/Footer";
import LayoutClient from "@/app/components/Common/Layout/LayoutClient";

const geistSans = Geist({variable: "--font-geist-sans", subsets: ["latin"]});
const geistMono = Geist_Mono({variable: "--font-geist-mono", subsets: ["latin"]});
const montserrat = Montserrat({subsets: ["latin"], variable: "--font-montserrat", display: "swap"});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app"
};

// ðŸš© enable static rendering for all pages within this layout
export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}));
}

export default async function LocaleLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{locale: string}>; // per docs: awaitable
}) {
  // validate locale
  const {locale} = await params;
  if (!hasLocale(routing.locales, locale)) notFound();

  // make locale available to all Server Components
  setRequestLocale(locale);

  return (
    <html lang={locale}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${montserrat.variable}
                    font-sans h-screen flex flex-col antialiased`}
      >

        <NextIntlClientProvider>
          <Header />
          <main className="flex-1">
            <LayoutClient>{children}</LayoutClient>
          </main>
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
